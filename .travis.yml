language: rust
rust: 1.36.0
dist: xenial
sudo: true
cache:
  cargo: true
  timeout: 1024

git:
  depth: 2
  submodules: false

env:
  global:
    - RUST_BACKTRACE=full
    - CKB_CLI_VERSION=v0.17.0

addons:
  apt:
    packages:
      - libssl-dev
      - autoconf
      - flex
      - bison
      - texinfo
      - libtool

before_install:
  - cargo sweep --version || travis_retry cargo install --git https://github.com/holmgr/cargo-sweep --rev 4770deda37a2203c783e301b8c0c895964e8971e
  - cargo sweep -s

before_script:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then ulimit -n 8192; fi

script: make test

before_cache:
  - rm -rf ./target/release/incremental/
  - rm -rf ./target/debug/incremental/
  - cargo sweep -f

deploy:
  provider: releases
  api_key: "$GITHUB_TOKEN"
  file:
    - "releases/ckb_${TRAVIS_TAG}_${REL_PKG}"
    - "releases/ckb_${TRAVIS_TAG}_${REL_PKG}.asc"
  skip_cleanup: true
  prerelease: true
  overwrite: true
  on:
    tags: true
    condition: '"$GITHUB_TOKEN" != "" && "$REL_PKG" != ""'

matrix:
  include:
    # We don't run tests, linters and quck check in fork branch, since they will be covered in PR.
    - name: Tests on macOS
      if: 'tag IS NOT present AND (type = pull_request OR branch IN (master, staging, trying))'
      os: osx
    - name: Tests on Linux
      if: 'tag IS NOT present AND (type = pull_request OR branch IN (master, staging, trying) OR repo != nervosnetwork/ckb)'
      os: linux
    - name: PR Integration
      if: 'tag IS NOT present AND branch != develop AND branch !~ /^rc\// AND (type = pull_request OR repo != nervosnetwork/ckb)'
      os: linux
      script: make CKB_TEST_ARGS="--max-time 1200" integration
    - name: Linters
      env: CACHE_NAME=linters-2
      if: 'tag IS NOT present AND (type = pull_request OR branch in (master, staging, trying) OR repo != nervosnetwork/ckb)'
      os: linux
      before_install:
        - echo "Today is $(date)"
        - if [[ $(date +%u) -eq 1 ]] ; then cargo sweep --version || travis_retry cargo install --git https://github.com/holmgr/cargo-sweep --rev 4770deda37a2203c783e301b8c0c895964e8971e; fi
        - if [[ $(date +%u) -eq 1 ]] ; then cargo sweep -s; fi
      install:
        - cargo fmt --version || travis_retry rustup component add rustfmt
        - cargo clippy --version || travis_retry rustup component add clippy
      script:
        - make fmt
        - make clippy
        - git diff --exit-code Cargo.lock
      before_cache:
        - rm -rfv target/debug/incremental/*
        - rm -rfv target/debug/.fingerprint/ckb-*
        - rm -rfv target/debug/deps/ckb-*
        - rm -rfv target/debug/ckb.d
        - cargo clean -p ckb
        - if [[ $(date +%u) -eq 1 ]] ; then cargo sweep -f; fi
    - name: Quick Check
      if: 'tag IS NOT present AND (type = pull_request OR branch in (master, staging, trying) OR repo != nervosnetwork/ckb)'
      os: linux
      cache: false
      addons: { apt: { packages: [] } }
      before_install: skip
      before_cache: skip
      script:
        - make check-cargotoml
        - make check-dirty-rpc-doc

    - name: Integration on macOS
      env: CACHE_NAME=integration
      if: 'tag IS NOT present AND type != pull_request AND (branch IN (master, staging, trying) OR branch =~ /^rc\// OR (branch = develop AND commit_message !~ /^ Merge #\d+/))'
      os: osx
      script: make integration-release
    - name: Integration on Linux
      env: CACHE_NAME=integration
      if: 'tag IS NOT present AND type != pull_request AND (branch IN (master, staging, trying) OR branch =~ /^rc\// OR (branch = develop AND commit_message !~ /^ Merge #\d+/))'
      os: linux
      script: make integration-release
    - name: Code Coverage
      if: 'tag IS NOT present AND ((branch = master AND type != pull_request) OR head_branch =~ /^rc\//)'
      os: linux
      install:
        - cargo tarpaulin --version || travis_retry cargo install cargo-tarpaulin
      script:
        - make cov
      after_success:
        - bash <(curl -s https://codecov.io/bash)

    - name: Package for macOS
      if: 'tag IS present AND env(GITHUB_TOKEN) IS present'
      os: osx
      env: REL_PKG=x86_64-apple-darwin.zip
      before_install: skip
      cache:
        directories:
          - $HOME/.cargo
      before_cache:
        - rm -rf $HOME/.cargo/registry
      script:
        - make prod
        - openssl aes-256-cbc -K $encrypted_82dff4145bbf_key -iv $encrypted_82dff4145bbf_iv -in devtools/ci/travis-secret.asc.enc -out devtools/ci/travis-secret.asc -d
        - gpg --import devtools/ci/travis-secret.asc
        - devtools/ci/package.sh target/release/ckb
    - name: Package for Linux
      if: 'tag IS present AND env(GITHUB_TOKEN) IS present'
      language: ruby
      addons: { apt: { packages: [] } }
      env: REL_PKG=x86_64-unknown-linux-gnu.tar.gz BUILDER_IMAGE=nervos/ckb-docker-builder:xenial-rust-1.36.0
      before_install: skip
      before_cache: skip
      cache:
        directories:
          - $HOME/.cargo/git
      script:
        - mkdir -p $HOME/.cargo/git
        - docker run --rm -it -w /ckb -v $(pwd):/ckb -v $HOME/.cargo/git:/root/.cargo/git -e OPENSSL_STATIC=1 -e OPENSSL_LIB_DIR=/usr/local/lib -e OPENSSL_INCLUDE_DIR=/usr/local/include/openssl $BUILDER_IMAGE make prod
        - openssl aes-256-cbc -K $encrypted_82dff4145bbf_key -iv $encrypted_82dff4145bbf_iv -in devtools/ci/travis-secret.asc.enc -out devtools/ci/travis-secret.asc -d
        - gpg --import devtools/ci/travis-secret.asc
        - devtools/ci/package.sh target/release/ckb
    - name: Package for Centos
      if: 'tag IS present AND env(GITHUB_TOKEN) IS present'
      language: ruby
      addons: { apt: { packages: [] } }
      env: REL_PKG=x86_64-unknown-centos-gnu.tar.gz BUILDER_IMAGE=nervos/ckb-docker-builder:centos-7-rust-1.36.0
      before_install: skip
      before_cache: skip
      cache:
        directories:
          - $HOME/.cargo/git
      script:
        - mkdir -p $HOME/.cargo/git
        - docker run --rm -it -w /ckb -v $(pwd):/ckb -v $HOME/.cargo/git:/root/.cargo/git $BUILDER_IMAGE scl enable llvm-toolset-7 'make prod'
        - openssl aes-256-cbc -K $encrypted_82dff4145bbf_key -iv $encrypted_82dff4145bbf_iv -in devtools/ci/travis-secret.asc.enc -out devtools/ci/travis-secret.asc -d
        - gpg --import devtools/ci/travis-secret.asc
        - devtools/ci/package.sh target/release/ckb
